@using Website.Models.Api.Users;

@inject IContentManager ContentManager

@model IndexViewModel

@{
    ViewBag.Title = "Manage your account";

    // Wire up tooltips
    ContentManager.RegisterRawScript("$('[data-toggle=\"tooltip\"]').tooltip();");
}

<h2>@ViewBag.Title.</h2>
<p class="text-success">@ViewBag.StatusMessage</p>

<div>
    <h4>Change your account settings</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Password:</dt>
        <dd>
            @if (Model.HasPassword)
            {
                <text>[&nbsp;&nbsp;<a asp-controller="Manage" asp-action="ChangePassword">Change</a>&nbsp;&nbsp;]</text>
            }
            else
            {
                <text>[&nbsp;&nbsp;<a asp-controller="Manage" asp-action="SetPassword">Create</a>&nbsp;&nbsp;]</text>
            }
        </dd>
        <dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [&nbsp;&nbsp;<a asp-controller="Manage" asp-action="ManageLogins">Manage</a>&nbsp;&nbsp;]
        </dd>
    </dl>
    <hr />
    <form asp-controller="Manage" asp-action="Index" method="post" class="form-horizontal" role="form">
        <dl class="dl-horizontal">
            <dt>
                <label asp-for="AreUploadsPublic" class="control-label"></label>
            </dt>
            <dd class="checkbox">
                <label asp-for="AreUploadsPublic">
                    <input type="checkbox" asp-for="AreUploadsPublic" />
                    Allow your uploads to be viewed by others if you choose to share the url with them
                </label>
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt>
                <label asp-for="PlayStyle" class="control-label"></label>
                <a href="https://www.reddit.com/r/ClickerHeroes/wiki/introduction#wiki_types_of_playstyle_builds" target="_blank" class="text-muted" data-toggle="tooltip" data-placement="bottom" title="This is how you play the game. Click for details on Idle and Active. Hybrid is basically Idle but using all cooldowns before ascending.">(?)</a>
            </dt>
            <dd>
                @foreach (var playStyle in Enum.GetNames(typeof(PlayStyle)))
                {
                    <label class="radio-inline">
                        <input type="radio" asp-for="PlayStyle" value="@playStyle" /> @playStyle
                    </label>
                }
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt>
                <label asp-for="HybridRatio" class="control-label"></label>
                <a href="#" class="text-muted" data-toggle="tooltip" data-placement="bottom" title="This is the ratio to use for leveling idle and active ancients. Clear the value to reset it to the default">(?)</a>
            </dt>
            <dd>
                <input type="number" asp-for="HybridRatio" class="form-control" />
                <span asp-validation-for="HybridRatio" class="text-danger"></span>
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt>
                <label asp-for="UseScientificNotation" class="control-label"></label>
            </dt>
            <dd class="checkbox">
                <label asp-for="UseScientificNotation">
                    <input type="checkbox" asp-for="UseScientificNotation" onchange="$('#scientificNotationThresholdContainer').toggle()" />
                    Use scientific notation
                </label>
            </dd>
        </dl>
        <dl class="dl-horizontal" id="scientificNotationThresholdContainer" style="@(Model.UseScientificNotation ? string.Empty : "display:none")">
            <dt>
                <label asp-for="ScientificNotationThreshold" class="control-label"></label>
                <a href="#" class="text-muted" data-toggle="tooltip" data-placement="bottom" title="This is the value at which to start showing numbers in scientific notation. Use &quot;0&quot; to always use it or clear the value to reset it to the default.">(?)</a>
            </dt>
            <dd>
                <input type="number" asp-for="ScientificNotationThreshold" class="form-control" />
                <span asp-validation-for="ScientificNotationThreshold" class="text-danger"></span>
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt>
                <label asp-for="UseEffectiveLevelForSuggestions" class="control-label"></label>
            </dt>
            <dd class="checkbox">
                <label asp-for="UseEffectiveLevelForSuggestions">
                    <input type="checkbox" asp-for="UseEffectiveLevelForSuggestions" />
                    Use the effective level (ancient + relic levels) for ancient suggestions
                </label>
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt>
                <label asp-for="UseLogarithmicGraphScale" class="control-label"></label>
            </dt>
            <dd class="checkbox">
                <label asp-for="UseLogarithmicGraphScale">
                    <input type="checkbox" asp-for="UseLogarithmicGraphScale" onchange="$('#logarithmicGraphScaleThresholdContainer').toggle()" />
                    Use logarithmic scale for graphs
                </label>
            </dd>
        </dl>
        <dl class="dl-horizontal" id="logarithmicGraphScaleThresholdContainer" style="@(Model.UseLogarithmicGraphScale ? string.Empty : "display:none")">
            <dt>
                <label asp-for="LogarithmicGraphScaleThreshold" class="control-label"></label>
                <a href="#" class="text-muted" data-toggle="tooltip" data-placement="bottom" title="This is the range (max - min values) a graph must be to start using logarithmic scale. Use &quot;0&quot; to always use it or clear the value to reset it to the default.">(?)</a>
            </dt>
            <dd>
                <input type="number" asp-for="LogarithmicGraphScaleThreshold" class="form-control" />
                <span asp-validation-for="LogarithmicGraphScaleThreshold" class="text-danger"></span>
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt>
                <label asp-for="Theme" class="control-label"></label>
            </dt>
            <dd>
                @foreach (var siteTheme in Enum.GetNames(typeof(SiteThemeType)))
                {
                    <label class="radio-inline">
                        <input type="radio" asp-for="Theme" value="@siteTheme" /> @siteTheme
                    </label>
                }
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt></dt>
            <dd>
                <input type="submit" class="btn btn-default" value="Save Changes" />
            </dd>
        </dl>
    </form>
</div>
